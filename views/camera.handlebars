<!-- /. NAV SIDE  -->
<nav class="navbar-default navbar-side" role="navigation">
    <div class="sidebar-collapse">
        <ul class="nav" id="main-menu">

            <li>
                <a href="home"><i class="fa fa-dashboard"></i> Dashboard</a>
            </li>
            <li>
                <a href="control"><i class="fa fa-list-alt"></i> Control</a>
            </li>
            <li>
                <a href="scenes"><i class="fa fa-picture-o"></i> Scenes</a>
            </li>
            <li>
                <a href="chart"><i class="fa fa-bar-chart-o"></i> Charts</a>
            </li>
            <li>
                <a class="active-menu"><i class="fa fa-camera"></i> Camera</a>
            </li>

            <li>
                <a href="gps"><i class="fa fa-table"></i> Members Tracker</a>
            </li>
            <li>
                <a href="chat"><i class="fa fa-edit"></i> Chat </a>
            </li>
            <li>
                <a href="form.html"><i class="fa fa-fw fa-file"></i> Empty Page</a>
            </li>
        </ul>
    </div>
</nav>

<!-- put this before page inner (body) to load every scripts before body -->

<script src="dist/face-api.js"></script>
<script src="commons.js"></script>

<!-- /. PAGE WRAPPER  -->
<div id="page-wrapper" >
    <div id="page-inner">
        <style>
            video, canvas {
                position: absolute;
            }

        </style>
        <h2> SECURITY CAMERA</h2>
        <br>

            <video onplay="onPlay(this)" id="inputVideo" autoplay muted></video>
            <canvas id="overlay"></canvas>
        </div>

    </div>
</div>

<!-- put this func after body to load it right after every content on page loaded -->
<script>
    const MODEL_URL = '/weights';

    let modelLoaded = false
    let minFaceSize = 150
    let maxDistance = 0.6
    let minConfidence = 0.9

    async function onPlay(videoEl) {
        if(videoEl.paused || videoEl.ended || !modelLoaded)
            return false

        const { width, height } = faceapi.getMediaDimensions(videoEl)
        const canvas = $('#overlay').get(0)
        canvas.width = width
        canvas.height = height

        const mtcnnParams = {
            minFaceSize
        }

        const fullFaceDescriptions = (await faceapi.allFacesMtcnn(videoEl, mtcnnParams))
                .map(fd => fd.forSize(width, height))


        fullFaceDescriptions.forEach(({ detection, landmarks, descriptor }) => {
            faceapi.drawDetection('overlay', [detection], { withScore: false })
            faceapi.drawLandmarks('overlay', landmarks.forSize(width, height), { lineWidth: 4, color: 'red' })
            const bestMatch = getBestMatch(trainDescriptorsByClass, descriptor)
            const text = `${bestMatch.distance < maxDistance ? bestMatch.className : 'Just a HOOMANNN'} (${bestMatch.distance})`
            const { x, y, height: boxHeight } = detection.getBox()
            faceapi.drawText(
                    canvas.getContext('2d'),
                    x,
                    y + boxHeight,
                    text,
                    Object.assign(faceapi.getDefaultDrawOptions(), { color: 'red', fontSize: 16 })
            )
        })

        setTimeout(() => onPlay(videoEl))
    }

    async function run() {
        await faceapi.loadMtcnnModel(MODEL_URL)
        await faceapi.loadFaceRecognitionModel(MODEL_URL)

        // init reference data, e.g. compute a face descriptor for each class
        trainDescriptorsByClass = await initTrainDescriptorsByClass(faceapi.recognitionNet)

        modelLoaded = true

        // try to access users webcam and stream the images
        // to the video element
        const videoEl = $('#inputVideo').get(0)
        navigator.getUserMedia(
                { video: {} },
                stream => videoEl.srcObject = stream,
                err => console.error(err)
        )


    }

    $(document).ready(function() {

        run()
    })
</script>
            <!--<iframe id="localVideo" width="650" height="490" ></iframe>
                <video id="localVideo" width="1280" height="720" autoplay></video>
            -->




<!-- Comment in this bracket
<script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
<script src="webRTC/js/common.js"></script>
<script src="webRTC/js/videopipe.js"></script>
<script src="webRTC/main.js"></script>
<script src="webRTC/js/lib/ga.js"></script> //gg analytic<script>

<script src="../camTracking/build/tracking-min.js"></script>
<script src="../camTracking/build/data/face-min.js"></script>
<script src="../node_modules/dat.gui/build/dat.gui.min.js"></script>
<script src="../camTracking/assets/stats.min.js"></script>
</script>
-->